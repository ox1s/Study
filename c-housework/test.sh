#!/bin/bash

CYAN='\033[1;36m'
GREEN='\033[1;32m'
YELLOW='\033[1;33m'
RED='\033[1;31m'
PURPLE='\033[1;35m'
BOLD='\033[1m'
NC='\033[0m' 

echo -e "${CYAN}${BOLD}üßê –ö–∞–∫—É—é –ø–∞–ø–∫—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è —Ç–µ—Å—Ç–æ–≤?${NC}"
ls -d */

read -p "$(echo -e "${PURPLE}üìÇ –í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–∞–ø–∫–∏: ${NC}")" FOLDER_NAME

if [[ !	-d "$FOLDER_NAME" ]]
then
	echo -e "${RED}üíÄ –£–∂–∫—Å, —Ç–∞–∫–æ–π –ø–∞–ø–∫–∏ –Ω—è–º–∞, —Ç—ã –≤–≤–µ–ª–∞ $FOLDER_NAME${NC}"
	exit 1
fi

echo -e "\n${CYAN}${BOLD}‚úç –ö–∞–∫–æ–π —Å–∫—Ä–∏–ø—Ç —Å–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞—Ç—å –∏ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å?${NC}"
ls problem_*.c

read -p "$(echo -e "${PURPLE}üìÑ –í–≤–µ–¥–∏—Ç–µ –∏–º—è .c —Ñ–∞–π–ª–∞: ${NC}")" EXECUTABLE_SCRIPT

if [[ ! -f "$EXECUTABLE_SCRIPT" ]]
then
	echo -e "${RED}üôä–ê —Ç–∞–∫–æ–≥–æ —Ñ–∞–π–ª–∞ –Ω—è–º–∞, —Ç—ã –≤–≤–µ–ª–∞ $EXECUTABLE_SCRIPT${NC}"
	exit 1
fi

EXEC_NAME="${EXECUTABLE_SCRIPT%.c}"

echo -e "\n${YELLOW}üè≠ gcc –≤–æ—Ä–∫–∞–µ—Ç...${NC}" 
if gcc -Wall -Werror "$EXECUTABLE_SCRIPT" -o "$EXEC_NAME" -lm
then
	echo -e "${GREEN}ü´µüëå –°–∫–æ–º–ø–∏–ª–∏–ª—Å—è –≤ $EXEC_NAME${NC}"
else
	echo -e "${RED}ü•µ –û—à–∏–±–∫–∞ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏!${NC}"
	exit 1
fi

read -p "$(echo -e "\n${PURPLE}‚ú® –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –¥–µ—Ç–∞–ª–∏ –¥–ª—è —É—Å–ø–µ—à–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤? (y/n): ${NC}")" SHOW_DETAILS
SHOW_DETAILS=$(echo "$SHOW_DETAILS" | tr '[:upper:]' '[:lower:]')

echo -e "\n${CYAN}${BOLD}üëæ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –∏–∑ –ø–∞–ø–∫–∏ $FOLDER_NAME${NC}"

passed_count=0
failed_count=0
no_ans_count=0
tests_found=0

for test_file in "$FOLDER_NAME"/*.dat
do
	[ -f "$test_file" ] || continue
	((tests_found++))
	
	ans_file="${test_file%.dat}.ans"
	base_name=$(basename "$test_file")
	program_output=$(./"$EXEC_NAME" < "$test_file")
	if [ -f "$ans_file" ]
	then
		expected_output=$(cat "$ans_file")
		if [[ "$program_output" == "$expected_output" ]]
		then
			((passed_count++))
			if [[ "$SHOW_DETAILS" == "y" ]]
			then
				echo -e "\n${BOLD}–¢–µ—Å—Ç: ${test_file}${NC}"
                		echo -e "${GREEN}‚úÖ –û–ö${NC}"
                		echo -e "${YELLOW}–í—ã–≤–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º—ã:${NC}\n$program_output"
           		else
                		echo -e "${GREEN}‚úÖ –¢–µ—Å—Ç ${base_name} ... OK${NC}"
            		fi
		else
			((failed_count++))
			echo -e "\n${BOLD}–¢–µ—Å—Ç: ${test_file}${NC}"
            		echo -e "${RED}–í—ã–≤–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º—ã:${NC}\n$program_output"
            		echo -e "${RED}‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ! –û–∂–∏–¥–∞–ª–æ—Å—å —Å–æ–≥–ª–∞—Å–Ω–æ $(basename "$ans_file"):${NC}\n$expected_output"
		fi
	else
		((no_ans_count++))
		echo -e "\n${BOLD}–¢–µ—Å—Ç: ${test_file} (–Ω–µ—Ç .ans —Ñ–∞–π–ª–∞ –¥–ª—è —Å–≤–µ—Ä–∫–∏)${NC}"
        	echo -e "${YELLOW}–í—ã–≤–æ–¥:${NC}\n$program_output"
    	fi
done
			
if [ $tests_found -eq 0 ]
then
    	echo -e "\n${YELLOW}ü§î –í –ø–∞–ø–∫–µ '$FOLDER_NAME' –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ .dat —Ñ–∞–π–ª–∞.${NC}"
else
	echo -e "\n${CYAN}${BOLD}üèÅ –¢–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!${NC}"
	echo -e "${GREEN}–ü—Ä–æ—à–ª–æ: $passed_count${NC} | ${RED}–ó–∞–≤–∞–ª–µ–Ω–æ: $failed_count${NC} | ${YELLOW}–ë–µ–∑ –ø—Ä–æ–≤–µ—Ä–∫–∏: $no_ans_count${NC}\n"
fi
